// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QualidadeDeSoftware.Data;

#nullable disable

namespace QualidadeDeSoftware.Data.Migrations
{
    [DbContext(typeof(QualidadeDeSoftwareContext))]
    partial class QualidadeDeSoftwareContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.21");

            modelBuilder.Entity("QualidadeDeSoftware.Models.Aluno", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Aluno");
                });

            modelBuilder.Entity("QualidadeDeSoftware.Models.Exercicio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AlunoId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("DataEntrega")
                        .HasColumnType("TEXT");

                    b.Property<bool>("EstaAdequado")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ExercicioProgramadoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AlunoId");

                    b.HasIndex("ExercicioProgramadoId");

                    b.ToTable("Exercicio");
                });

            modelBuilder.Entity("QualidadeDeSoftware.Models.ExercicioProgramado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("DataLimite")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ExercicioProgramado");
                });

            modelBuilder.Entity("QualidadeDeSoftware.Models.Prova", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AlunoId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("EhFinal")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Nota")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AlunoId");

                    b.ToTable("Prova");
                });

            modelBuilder.Entity("QualidadeDeSoftware.Models.Exercicio", b =>
                {
                    b.HasOne("QualidadeDeSoftware.Models.Aluno", "Aluno")
                        .WithMany("Exercicios")
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QualidadeDeSoftware.Models.ExercicioProgramado", "ExercicioProgramado")
                        .WithMany()
                        .HasForeignKey("ExercicioProgramadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aluno");

                    b.Navigation("ExercicioProgramado");
                });

            modelBuilder.Entity("QualidadeDeSoftware.Models.Prova", b =>
                {
                    b.HasOne("QualidadeDeSoftware.Models.Aluno", "Aluno")
                        .WithMany("Provas")
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aluno");
                });

            modelBuilder.Entity("QualidadeDeSoftware.Models.Aluno", b =>
                {
                    b.Navigation("Exercicios");

                    b.Navigation("Provas");
                });
#pragma warning restore 612, 618
        }
    }
}
