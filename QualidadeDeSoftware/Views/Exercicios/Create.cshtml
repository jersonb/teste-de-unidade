@model ExercicioCreateView

@{
    ViewData["Title"] = "Create";
}

<h1>Atribuir Exercício a Aluno</h1>

<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group">
                <label asp-for="Aluno" class="control-label"></label>
                <input type="hidden" asp-for="AlunoId" value="@Model.AlunoId" class="form-control" />
                <input disabled value="@Model.Aluno" class="form-control" />
            </div>

            <div class="form-group">
                <label asp-for="ExercicioProgramadoId" class="control-label"></label>
                <select asp-for="ExercicioProgramadoId" class="form-control" asp-items="ViewBag.ExercicioProgramadoId">
                    <option value="@null">Selecione...</option>
                </select>
            </div>
            <div class="form-group">
                <label asp-for="DataEntrega" class="control-label"></label>
                <input type="date" asp-for="DataEntrega" class="form-control" />
                <span asp-validation-for="DataEntrega" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="EstaAdequado" /> @Html.DisplayNameFor(model => model.EstaAdequado)
                </label>
            </div>


            <div class="form-group">
                <input type="submit" value="Adicionar" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
